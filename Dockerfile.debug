# デバッグ版 - 問題を特定するため
FROM golang:1.24.2 AS builder
WORKDIR /src

# 構築コンテキストの確認
RUN echo "=== ビルドコンテキスト確認 ==="
COPY . .
RUN echo "=== コピー後のファイル構造 ===" && \
    ls -la && \
    echo "=== lambda/ ディレクトリ ===" && \
    ls -la lambda/ || echo "lambda/ ディレクトリが見つかりません" && \
    echo "=== handler.goファイル確認 ===" && \
    cat lambda/handler.go | head -n 10 || echo "handler.goが読めません"

# Go modulesを処理
COPY go.mod go.sum ./
RUN go mod download

# ビルド実行
RUN echo "=== ビルド開始 ===" && \
    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o bootstrap lambda/handler.go && \
    echo "=== ビルド完了 ===" && \
    ls -la bootstrap && \
    file bootstrap

# Runtime stage
FROM public.ecr.aws/lambda/provided:al2023

# Goアプリケーションをコピー
COPY --from=builder /src/bootstrap ${LAMBDA_TASK_ROOT}/bootstrap

# 権限とシンボリックリンクを設定
RUN chmod +x ${LAMBDA_TASK_ROOT}/bootstrap && \
    mkdir -p /var/runtime && \
    cp ${LAMBDA_TASK_ROOT}/bootstrap /var/runtime/bootstrap && \
    chmod +x /var/runtime/bootstrap

# 最終確認
RUN echo "=== 最終確認 ===" && \
    ls -la ${LAMBDA_TASK_ROOT}/ && \
    ls -la /var/runtime/ && \
    file ${LAMBDA_TASK_ROOT}/bootstrap && \
    file /var/runtime/bootstrap

CMD ["bootstrap"]
